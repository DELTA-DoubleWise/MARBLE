command:
  - python
  - __main__.py
  - probe 
  # NOTE: must specify this parameter to update the argparser
  - --wandb_sweep 

# program: __main__.py
method: bayes
metric:
  name: valid_best_ensemble_score
  goal: maximize
parameters:
  # ---- set sinlge value ----
  dataset:
    value: GS
  audio_dir:
    value: data/GS/giantsteps_clips/wav
  feature_dir:
    value: data/GS/hubert_features/HF_HuBERT_base_MPD_1Kh_HPO-baseline-v2_ckpt_134_250k_feature_layer_all_reduce_mean
  metadata_dir:
    value: data/GS/giantsteps_clips
  num_outputs:
    value: 24
  monitor:
    value: valid_best_ensemble_score
  progress_bar_refresh_rate:
    value: 0
  max_epochs:
    value: 400
  # lr_scheduler_patience: 
  #   value: 1
  earlystop_patience:
    value: 5
  test_ensemble:
    value: true
  fine_tune:
    value: true
  pre_trained_folder:
    value: /home/acp21aao/my_fastdata/MusicAudioPretrain_project_dir/huggingface_checkpoints_shorts/HF_HuBERT_base_MPD_1Kh_HPO-baseline-v2_ckpt_134_250k
  reduction:
    value: mean
  # layer: 
  #   value: all  
  # ---- end sinlge value ----
  # hidden_layer_size:
  #   value: 512
  lr_scheduler_patience: 
    distribution: categorical
      values: 
      - 1
      - 2
  layer:
    distribution: categorical
    values:
    - "all"
    - "0"
    - "1"
    - "2"
    - "3"
    - "4"
    - "5"
    - "6"
    - "7"
    - "8"
    - "9"
    - "10"
    - "11"
    - "12"
  train_sample_duration:
    value: 15
    # distribution: categorical
    # values:
    # - 15
    # - 30
  test_sample_duration:
    value: 30
  # for v100 16G, maximum batch_size is 2, hence we use grad accumulation
  batch_size:
    # distribution: int_uniform
    # min: 64
    # max: 512
    value: 8
  accumulate_grad_batches:
    distribution: categorical
    values:
    - 4
    - 8
    - 16
    - 32
    - 64
  l2_weight_decay:
    distribution: categorical
    values:
    - 0.0
    - 0.00001
    - 0.0001
  lr:
    distribution: log_uniform
    min: -10
    max: -2
  dropout_p:
    distribution: uniform
    min: 0.2
    max: 0.8
  # num_layers:
  #   distribution: int_uniform
  #   min: 2
  #   max: 6
  # features_start:
  #   distribution: categorical
  #   values:
  #     - 8
  #     - 16
  #     - 32
  #     - 64
  #     - 128
  # bilinear:
  #   distribution: categorical
  #   values:
  #     - True
  #     - False